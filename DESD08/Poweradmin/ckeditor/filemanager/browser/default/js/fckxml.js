var FCKXml = function () { }; FCKXml.prototype.GetHttpRequest = function () { try { return new XMLHttpRequest } catch (e) { } try { return new ActiveXObject("Msxml2.XMLHTTP") } catch (e) { } try { return new ActiveXObject("Microsoft.XMLHTTP") } catch (e) { } return null }, FCKXml.prototype.LoadUrl = function (e, t) { var r = this, n = "function" == typeof t, s = this.GetHttpRequest(); s.open("GET", e, n), n && (s.onreadystatechange = function () { if (4 == s.readyState) { var n; try { { s.responseXML.firstChild } n = s.responseXML } catch (o) { try { n = (new DOMParser).parseFromString(s.responseText, "text/xml") } catch (o) { } } if (!n || !n.firstChild || "parsererror" == n.firstChild.nodeName) return void alert("The server didn't send back a proper XML response. Please contact your system administrator.\n\nXML request error: " + s.statusText + " (" + s.status + ")\n\nRequested URL:\n" + e + "\n\nResponse text:\n" + s.responseText); r.DOMDocument = n, t(r) } }), s.send(null), n || (200 == s.status || 304 == s.status ? this.DOMDocument = s.responseXML : alert("XML request error: " + s.statusText + " (" + s.status + ")")) }, FCKXml.prototype.SelectNodes = function (e) { if (navigator.userAgent.indexOf("MSIE") >= 0) return this.DOMDocument.selectNodes(e); var t = new Array, r = this.DOMDocument.evaluate(e, this.DOMDocument, this.DOMDocument.createNSResolver(this.DOMDocument.documentElement), XPathResult.ORDERED_NODE_ITERATOR_TYPE, null); if (r) for (var n = r.iterateNext() ; n;) t[t.length] = n, n = r.iterateNext(); return t }, FCKXml.prototype.SelectSingleNode = function (e) { if (navigator.userAgent.indexOf("MSIE") >= 0) return this.DOMDocument.selectSingleNode(e); var t = this.DOMDocument.evaluate(e, this.DOMDocument, this.DOMDocument.createNSResolver(this.DOMDocument.documentElement), 9, null); return t && t.singleNodeValue ? t.singleNodeValue : null };